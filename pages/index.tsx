import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import Router, { useRouter } from 'next/router'
import { useEffect, useState } from 'react'
import { createGroup, deleteAccessToken } from '../api/fetch'
import { useData } from '../contexts/dataContext'
import styles from '../styles/Home.module.css'
import Cookies from 'js-cookie'
import Table from '@mui/material/Table';
import TableBody from '@mui/material/TableBody';
import TableCell from '@mui/material/TableCell';
import TableContainer from '@mui/material/TableContainer';
import TableHead from '@mui/material/TableHead';
import TableRow from '@mui/material/TableRow';
import Paper from '@mui/material/Paper';
import PositionedMenu from '../components/PositionedMenu'
import MenuItem from '@mui/material/MenuItem';
import CollapsibleTable from '../components/CollapsibleTable'
import TableGroupRow from '../components/TableGroupRow'
import Box from '@mui/material/Box';
import Fab from '@mui/material/Fab';
import AddIcon from '@mui/icons-material/Add';
import EditIcon from '@mui/icons-material/Edit';
import FavoriteIcon from '@mui/icons-material/Favorite';
import NavigationIcon from '@mui/icons-material/Navigation';
import EditGroupDialog from '../components/EditGroupDialog'
import { group } from 'console'
import { Group } from '../types/types'
import { getAccessToken } from "../api/fetch";



const Home: NextPage = () => {
  const { fetchGroups, data } = useData()

  const router = useRouter()

  useEffect(() => {
    if (!getAccessToken()) {
      router.replace("/login");
    } else {
      (async () => {
        try {
          fetchGroups()
        } catch {
          //TODO: Show something in the interface
        }
      })()
    }
  }, [])

  const [openDialog, setOpenDialog] = useState(false);

  const handleCloseDialog = () => {
    setOpenDialog(false);
  };

  const handleCreateGroup = async (newData: Group) => {
    try {
      await createGroup(newData)
      await fetchGroups()
    } catch {
      console.error("error creating group")
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Group Table React Demo</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <button onClick={() => {
        deleteAccessToken()
        router.replace("/login");
      }}>Log out</button>

      <main className={styles.main}>
        <h1>Group Table React Demo</h1>
        <TableContainer component={Paper} >
          <Table sx={{ minWidth: 650 }} aria-label="simple table">
            <TableHead>
              <TableRow>
                <TableCell>
                  Name
                </TableCell>
                <TableCell>
                  Description
                </TableCell>
                <TableCell>
                  People
                </TableCell>
                <TableCell>
                  Roles
                </TableCell>
                <TableCell>
                </TableCell>
              </TableRow>
            </TableHead>
            <TableBody>
              {data?.map((group: Group) => {
                return (
                  <TableGroupRow key={group.id} data={group} />)
              }
              )}
            </TableBody>
          </Table>
        </TableContainer>
        <Fab color="primary" aria-label="add" sx={{
          position: 'fixed',
          bottom: 16,
          right: 16,
        }} onClick={() => { setOpenDialog(true) }}>
          <AddIcon />
        </Fab>
        <EditGroupDialog data={{}} onClose={handleCloseDialog} openDialog={openDialog}

          handleSubmitData={(newData: Group) => handleCreateGroup(newData)}
        />
      </main>


    </div >
  )
}

export default Home

